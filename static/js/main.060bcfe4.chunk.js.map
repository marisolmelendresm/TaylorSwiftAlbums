{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","album","id","alt","src","process","title","CardList","albums","map","SearchBox","placeholder","handleChange","type","onChange","App","state","monsters","searchField","fetch","then","response","json","setState","this","filteredAlbums","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAAAC,GAAK,OACzB,sBAAKC,UAAS,wBAAmBD,EAAME,MAAMC,IAA7C,UACI,qBAAKF,UAAU,cAAcG,IAAI,QAAQC,IAAMC,qBAAA,kBAAoCN,EAAME,MAAMC,GAAhD,UAC/C,mCAAOH,EAAME,MAAMK,MAAnB,WCFSC,EAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SAEMD,EAAMS,OAAOC,KAAI,SAAAR,GAAK,OAAI,cAAC,EAAD,CAAsBA,MAAQA,GAAlBA,EAAMC,UCHzCQ,G,MAAY,SAAC,GAAD,IAAIC,EAAJ,EAAIA,YAAaC,EAAjB,EAAiBA,aAAjB,OACrB,uBACAZ,UAAW,SACXa,KAAK,SACLF,YAAcA,EACdG,SAAYF,MC+BDG,E,kDAhCb,aAAgB,IAAD,8BACX,gBAEKC,MAAQ,CACXC,SAAU,GACVC,YAAa,IALJ,E,qDASf,WAAsB,IAAD,OACnBC,MAAM,kFACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAZ,GAAM,OAAI,EAAKe,SAAS,CAAEN,SAAUT,S,oBAG9C,WAAW,IAAD,SAC0BgB,KAAKR,MAA/BC,EADA,EACAA,SAAUC,EADV,EACUA,YACZO,EAAiBR,EAASS,QAAO,SAAAzB,GAAK,OAAIA,EAAMK,MAAMqB,cAAcC,SAASV,EAAYS,kBAC/F,OACE,sBAAK3B,UAAU,MAAf,UACE,uDACA,cAAC,EAAD,CAAWW,YAAY,gBAAgBC,aAAe,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACL,YAAaW,EAAEC,OAAOC,WAEhG,cAAC,EAAD,CAAUvB,OAAQiB,W,GAxBRO,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.060bcfe4.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.style.css'\r\n\r\nexport const Card = props => \r\n<div className={`card-container${props.album.id}`}>\r\n    <img className=\"cover-photo\" alt=\"cover\" src={ process.env.PUBLIC_URL + `/covers/${props.album.id}.jpg` }></img>\r\n    <h2> { props.album.title } </h2>\r\n</div>","import React from 'react';\r\nimport './card-list.style.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => (\r\n    <div className=\"card-list\">\r\n        {\r\n          props.albums.map(album => <Card key= {album.id} album={ album }/>)\r\n        }\r\n    </div>\r\n);","import React from \"react\";\r\nimport './search-box.style.css'\r\n\r\n\r\nexport const SearchBox = ( { placeholder, handleChange } ) => (\r\n    <input \r\n    className= 'search'\r\n    type=\"search\" \r\n    placeholder= {placeholder} \r\n    onChange = {handleChange}></input>\r\n)","import './App.css';\n\nimport { CardList  } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport React, {Component} from 'react'\n\nclass App extends Component {\n  constructor () {\n      super();\n\n      this.state = {\n        monsters: [],\n        searchField: \"\"\n      };\n  }\n\n  componentDidMount () {\n    fetch('https://my-json-server.typicode.com/marisolmelendresm/TaylorSwiftAlbums/albums')\n      .then(response => response.json())\n      .then(albums => this.setState({ monsters: albums }))\n  }\n\n  render () {\n    const { monsters, searchField } = this.state;\n    const filteredAlbums = monsters.filter(album => album.title.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1> Taylor Swift Albums </h1>\n        <SearchBox placeholder=\"search albums\" handleChange= {e => this.setState({searchField: e.target.value})}>\n        </SearchBox>\n        <CardList albums={filteredAlbums}>\n        </CardList>\n        \n      </div>\n    );\n  }\n    \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}